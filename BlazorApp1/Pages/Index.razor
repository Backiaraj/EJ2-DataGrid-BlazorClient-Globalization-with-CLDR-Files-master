@page "/"

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />


@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Schedule
@using Microsoft.JSInterop;
@using Newtonsoft.Json;
@inject HttpClient Http;


@using Syncfusion.EJ2.Blazor.Grids

<EjsGrid DataSource="@Orders" AllowSorting="true" AllowGrouping="true" AllowPaging="true">
    <GridColumns>
        <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.OrderDate) HeaderText=" Order Date" Format="yMd" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130"></GridColumn>
        <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right" Width="120"></GridColumn>
    </GridColumns>
</EjsGrid>

@functions{
    [Inject]
    protected IJSRuntime JsRuntime { get; set; }

    public List<Order> Orders { get; set; }

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 75).Select(x => new Order()
        {
            OrderID = 1000 + x,
            CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
            Freight = 2.1 * x,
            OrderDate = DateTime.Now.AddDays(-x),
        }).ToList();
    }

    public class Order
    {
        public int? OrderID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public double? Freight { get; set; }
    }
    protected override async Task OnInitializedAsync()
    {
        var data = await Http.GetJsonAsync<object>("de.json");
        var sup1 = await Http.GetJsonAsync<object>("cldr-data/supplemental/numberingSystems.json");
        var sup2 = await Http.GetJsonAsync<object>("cldr-data/main-de/ca-gregorian.json");
        var sup3 = await Http.GetJsonAsync<object>("cldr-data/main-de/numbers.json");
        var sup4 = await Http.GetJsonAsync<object>("cldr-data/main-de/timeZoneNames.json");
        var sup5 = await Http.GetJsonAsync<object>("cldr-data/main-de/currencies.json");

        var cldrData = new object[] { sup1, sup2, sup3, sup4 ,sup5};

        this.JsRuntime.Ejs().LoadLocaleData(data).LoadCldrData(cldrData).SetCulture("de").SetCurrencyCode("EUR");
    }
}

